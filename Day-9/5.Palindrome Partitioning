Problem Link:https://leetcode.com/problems/palindrome-partitioning/

    vector<vector<string>>ans;
    void solve(string s,vector<string>v,int idx)
    {
        if(idx==s.size())
        {
            ans.push_back(v);
            return;
        }
        for(int i=idx;i<s.size();i++)
        {
            if(is_pali(s,idx,i))
            {
                v.push_back(s.substr(idx,i-idx+1));
                solve(s,v,i+1);
                v.pop_back();
            } 
        }
    }
    bool is_pali(string s,int l,int e)
    {
        while(l<e)
        {
            if(s[l]!=s[e])
                return false;
            l++;
            e--;
        }
        return true;
    }
    vector<vector<string>> partition(string s) {
        vector<string>v;
        solve(s,v,0);
        return ans;
    }